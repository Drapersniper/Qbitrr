name: Version Bump, Tags and Releases

on:
  push:
    branches:
      - master

jobs:
  bump_version:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.event.head_commit.message, '[patch]') || startsWith(github.event.head_commit.message, '[minor]') || startsWith(github.event.head_commit.message, '[major]') }}
    env:
      RELEASE_TYPE: ${{ startsWith(github.event.head_commit.message, '[patch]') && 'patch' || startsWith(github.event.head_commit.message, '[minor]') && 'minor' ||startsWith(github.event.head_commit.message, '[major]') && 'major' }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bump2version setuptools wheel twine
      - name: Retrieve current version
        run: |
          echo "::set-output name=VERSION::$(python setup.py --version)"
        id: current_version
      - name: Bump Patch Version
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
        run: |
          bump2version --current-version $(python setup.py --version) ${{ env.RELEASE_TYPE }} setup.cfg
      - name: Retrieve new version
        run: |
          echo "::set-output name=VERSION::$(python setup.py --version)"
        id: new_version
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_push_gpgsign: true
      - name: Git Auto Commit
        uses: stefanzweifel/git-auto-commit-action@v4.12.0
        with:
          commit_message: "[deploy] Automated ${{ env.RELEASE_TYPE }} version bump: ${{ steps.current_version.outputs.VERSION }} >> ${{ steps.new_version.outputs.VERSION }}"
          tagging_message: 'v${{ steps.new_version.outputs.VERSION }}'
          commit_options: -S
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: 'v${{ steps.new_version.outputs.VERSION }}'
          title: 'v${{ steps.new_version.outputs.VERSION }}'
  publish:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.event.head_commit.message, '[deploy]') }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
