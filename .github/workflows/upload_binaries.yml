name: Upload Binaries

on:
  push:
    branches:
    - master

defaults:
  run:
    shell: bash

env:
  project-name: qBitrr

jobs:
  package:
    runs-on: ${{ matrix.os }}
    if: ${{ startsWith(github.event.head_commit.message, '[auto-publish]') }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows-latest
          platform-name: windows.x64
          python-version: '3.10'
        - os: macos-latest
          platform-name: macos.x64
          python-version: '3.10'
        - os: ubuntu-latest
          platform-name: linux.x64
          python-version: '3.10'
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: Set archive name
      run: |
        ARCHIVE_NAME=${{ env.project-name }}-`git describe --always`-${{ matrix.platform-name }}
        echo "Archive name set to: $ARCHIVE_NAME"
        echo "::set-output name=NAME::$ARCHIVE_NAME"
      id: archieve
    - name: Set up Python ${{ env.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.python-version }}
    - name: Install APT dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install libsdl2-dev
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install PyInstaller -r requirements.txt
    - name: Run PyInstaller
      env:
        PYTHONOPTIMIZE: 2   # Enable optimizations as if the -O flag is given.
        PYTHONHASHSEED: 42   # Try to ensure deterministic results.
        PYTHONUNBUFFERED: 1
      run: |
        pyinstaller build.spec
      # This step exists for debugging.  Such as checking if data files were included correctly by PyInstaller.
    - name: List distribution files
      run: |
        find dist
      # Archive the PyInstaller build using the appropriate tool for the platform.
    - name: Tar files
      if: runner.os != 'Windows'
      run: |
        tar --format=ustar -czvf ${{ steps.archieve.outputs.NAME }}.tar.gz dist/*/
    - name: Archive files
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Compress-Archive dist/*/ ${{ steps.archieve.outputs.NAME }}.zip
      # Upload archives as artifacts, these can be downloaded from the GitHub actions page.
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: automated-builds
        path: ${{ env.archive-name }}.*
        retention-days: 7
        if-no-files-found: error
      # If a tag is pushed then a new archives are uploaded to GitHub Releases automatically.
    - name: Upload release
      if: startsWith(github.ref, 'refs/tags/')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ steps.archieve.outputs.NAME }}.*
        file_glob: true
        tag: ${{ github.ref }}
        overwrite: true
