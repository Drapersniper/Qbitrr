; The script supports multiple Sonnar/Radarr instances.
; As long as the section name starts with "radarr" or "sonarr" you are free to name it whatever you want.
; DO NOT rename "Settings" or "Qbit" or "Logging" these are fixed values and the script expect them to existt.

[Sonarr-TV]
; Toggle whether to manage Sonarr torrents.
Managed = True
; The URL used to access Sonarr's interface (if you use a domain enter the domain without a port)
URI = ...
; Sonarr API Key, Can be found it Settings > General > Security
APIKey = ...
; Category applied by Sonarr to torrents in qBitTorrent, can be found in Settings > Download Clients > qBit > Category
Category = sonarr-tv
; Toggle whether to send a query to Sonarr to search any deleted torrents
Research = True
; Sonarr's Import Mode: (Move, Copy, Hardlink)
importMode = Move
; Timer to call RSSSync (In minutes) - Set to 0 to disable
RssSyncTimer = 10
; Timer to call RefreshDownloads tp update the queue. (In minutes) - Set to 0 to disable
RefreshDownloadsTimer = 1
; Set it to regex matches respect/ignore case.
CaseSensitiveMatches = False
; These regex values will match any folder where the full name matches the specified values here, comma separated strings.
FolderExclusionRegex : \bextras?\b,\bfeaturettes?\b,\bsamples?\b,\bscreens?\b,\bspecials?\b,\bova\b,\bnc(ed|op)?(\d+)?\b
; These regex values will match if any of these strings exist in the file names, comma separated strings.
FileNameExclusionRegex : \bncop\d+?\b,\bnced\d+?\b,\bsample\b,\brarbg.com\b,\btrailer\b,music video,comandotorrents.com
;Only files with these extensions will be allowed to be downloaded, comma separated strings.
FileExtensionAllowlist : .mp4,.mkv,.sub,.ass,.srt,.!qB,.parts
; Auto delete files that can't be playable (i.e .exe, .png)
AutoDelete = True
; Ignore Torrents which are younger than this value (in seconds: 600 = 10 Minutes)
IgnoreTorrentsYoungerThan = 180
; Maximum allowed remaining ETA for torrent completion (in seconds: 3600 = 1 Hour)
MaximumETA = 36000
; Do not delete torrents with higher completion percentge than this setting (0.5 = 50%, 1.0 = 100%)
MaximumDeletablePercentage = 0.99
;Should search for Missing files?
SearchMissing = False
;Search for specials? Only works if "SearchMissing" is enabled
AlsoSearchSpecials = False
;Maximum allowed Searches at any one points (I wouldn't reccomend settings this too high, Arrs have a limit of 3 tasks at once anyways.)
SearchLimit = 5
;Arr Databapth  file path
DatabaseFile = .../sonarr.db
;Search Parameters
;It will order searches by the year the EPISODE was first aired (Ignored for now, as I add more options it will be made available)
SearchByYear = True
; First year to search (Leave blank for current year)
StartYear = 2021
; Last Year to Search
LastYear = 1990
;Reverse order (Start searching in "LastYear" and finish in "StartYear"
SearchInReverse = False
;Search Ombi First (Will only work if 'SearchMissing' is enabled.
SearchOmbiRequests = False
;Ombi URI (Note that this has to be the instance of Ombi which manage the Arr instance request (If you have multiple Ombi instances)
OmbiURI = http://localhost:5000
;Ombi's API Key
OmbiAPIKey = ...
;Search Overseerr First (Will only work if 'SearchMissing' is enabled. (If this and Ombi are both enable, Ombi will be ignored)
SearchOverseerrRequests = True
;Overseerr's URI
OverseerrURI = http://localhost:5055
;Overseerr's API Key
OverseerrAPIKey = ...
;Only process approved requests
ApprovedOnly = False
;Ombi search timer (in seconds)
SearchRequestsEvery = 1800
;Prioritize Today's releases (Similar effect as RSS Sync, where it searches today's release episodes first, only works on Sonarr
PrioritizeTodaysReleases = True
; Search by series instead of by episode
SearchBySeries = True
; Search series/episodes which already have a file in the db
DoUpgradeSearch = False
;Do a Quality unmet search for existing episodes
QualityUnmetSearch = False
;Ignore slow torrents
DoNotRemoveSlow = False


[Sonarr-Anime]
; Toggle whether to manage Sonarr torrents.
Managed = True
; The URL used to access Sonarr's interface (if you use a domain enter the domain without a port)
URI = ...
; Sonarr API Key, Can be found it Settings > General > Security
APIKey = ...
; Category applied by Sonarr to torrents in qBitTorrent, can be found in Settings > Download Clients > qBit > Category
Category = sonarr-anime
; Toggle whether to send a query to Sonarr to search any deleted torrents
Research = True
; Sonarr's Import Mode: (Move, Copy, Hardlink)
importMode = Move
; Timer to call RSSSync (In minutes) - Set to 0 to disable
RssSyncTimer = 10
; Timer to call RefreshDownloads tp update the queue. (In minutes) - Set to 0 to disable
RefreshDownloadsTimer = 1
; Set it to regex matches respect/ignore case.
CaseSensitiveMatches = False
; These regex values will match any folder where the full name matches the specified values here, comma separated strings.
FolderExclusionRegex : \bextras?\b,\bfeaturettes?\b,\bsamples?\b,\bscreens?\b,\bnc(ed|op)?(\d+)?\b
; These regex values will match if any of these strings exist in the file names, comma separated strings.
FileNameExclusionRegex : \bncop\d+?\b,\bnced\d+?\b,\bsample\b,\brarbg.com\b,\btrailer\b,music video,comandotorrents.com
;Only files with these extensions will be allowed to be downloaded, comma separated strings.
FileExtensionAllowlist : .mp4,.mkv,.sub,.ass,.srt,.!qB,.parts
; Auto delete files that can't be playable (i.e .exe, .png)
AutoDelete = True
; Ignore Torrents which are younger than this value (in seconds: 600 = 10 Minutes)
IgnoreTorrentsYoungerThan = 180
; Maximum allowed remaining ETA for torrent completion (in seconds: 3600 = 1 Hour)
MaximumETA = 36000
; Do not delete torrents with higher completion percentge than this setting (0.5 = 50%, 1.0 = 100%)
MaximumDeletablePercentage = 0.99
;Should search for Missing files?
SearchMissing = False
;Search for specials? Only works if "SearchMissing" is enabled
AlsoSearchSpecials = False
;Maximum allowed Searches at any one points (I wouldn't reccomend settings this too high, Arrs have a limit of 3 tasks at once anyways.)
SearchLimit = 5
;Arr Databapth  file path
DatabaseFile = .../sonarr.db
;Search Parameters
;It will order searches by the year the EPISODE was first aired (Ignored for now, as I add more options it will be made available)
SearchByYear = True
; First year to search (Leave blank for current year)
StartYear = 2021
; Last Year to Search
LastYear = 1990
;Reverse order (Start searching in "LastYear" and finish in "StartYear"
SearchInReverse = False
;Search Ombi First (Will only work if 'SearchMissing' is enabled.
SearchOmbiRequests = False
;Ombi URI (Note that this has to be the instance of Ombi which manage the Arr instance request (If you have multiple Ombi instances)
OmbiURI = http://localhost:5000
;Ombi's API Key
OmbiAPIKey = ...
;Search Overseerr First (Will only work if 'SearchMissing' is enabled. (If this and Ombi are both enable, Ombi will be ignored)
SearchOverseerrRequests = True
;Overseerr's URI
OverseerrURI = http://localhost:5055
;Overseerr's API Key
OverseerrAPIKey = ...
;Only process approved requests
ApprovedOnly = False
;Ombi search timer (in seconds)
SearchRequestsEvery = 1800
;Prioritize Today's releases (Similar effect as RSS Sync, where it searches today's release episodes first, only works on Sonarr
PrioritizeTodaysReleases = True
; Search by series instead of by episode
SearchBySeries = True
; Search series/episodes which already have a file in the db
DoUpgradeSearch = False
;Do a Quality unmet search for existing episodes
QualityUnmetSearch = False
;Ignore slow torrents
DoNotRemoveSlow = False

[Radarr-1080]
; Toggle whether to manage Radarr torrents.
Managed = True
; The URL used to access Radarr's interface (if you use a domain enter the domain without a port)
URI = ...
; Radarr API Key, Can be found it Settings > General > Security
APIKey = ...
; Category applied by Radarr to torrents in qBitTorrent, can be found in Settings > Download Clients > qBit > Category
Category = radarr-1080
; Toggle whether to send a query to Radarr to search any deleted torrents
Research = True
; Radarr's Import Mode: (Move, Copy, Hardlink)
importMode = Move
; Timer to call RSSSync (In minutes) - Set to 0 to disable
RssSyncTimer = 10
; Timer to call RefreshDownloads tp update the queue. (In minutes) - Set to 0 to disable
RefreshDownloadsTimer = 1
; Set it to regex matches respect/ignore case.
CaseSensitiveMatches = False
; These regex values will match any folder where the full name matches the specified values here, comma separated strings.
FolderExclusionRegex : \bextras?\b,\bfeaturettes?\b,\bsamples?\b,\bscreens?\b,\bspecials?\b,\bova\b,\bnc(ed|op)?(\d+)?\b
; These regex values will match if any of these strings exist in the file names, comma separated strings.
FileNameExclusionRegex : \bncop\d+?\b,\bnced\d+?\b,\bsample\b,\brarbg.com\b,\btrailer\b,music video,
;Only files with these extensions will be allowed to be downloaded, comma separated strings.
FileExtensionAllowlist : .mp4,.mkv,.sub,.ass,.srt,.!qB,.parts
; Auto delete files that can't be playable (i.e .exe, .png)
AutoDelete = True
; Ignore Torrents which are younger than this value (in seconds: 600 = 10 Minutes)
IgnoreTorrentsYoungerThan = 180
; Maximum allowed remaining ETA for torrent completion (in seconds: 3600 = 1 Hour)
MaximumETA = 18000
; Do not delete torrents with higher completion percentge than this setting (0.5 = 50%, 1.0 = 100%)
MaximumDeletablePercentage = 0.99
;Should search for Missing files?
SearchMissing = False
;Search for specials? Only works if "SearchMissing" is enabled
AlsoSearchSpecials = True
;Maximum allowed Searches at any one points (I wouldn't reccomend settings this too high, Arrs have a limit of 3 tasks at once anyways.)
SearchLimit = 5
;Arr Databapth  file path
DatabaseFile = .../radarr.db
;Search Parameters
;It will order searches by the year the EPISODE was first aired (Ignored for now, as I add more options it will be made available)
SearchByYear = True
; First year to search (Leave blank for current year)
StartYear = 2021
; Last Year to Search
LastYear = 1990
;Reverse order (Start searching in "LastYear" and finish in "StartYear"
SearchInReverse = False
;Search Ombi First (Will only work if 'SearchMissing' is enabled.
SearchOmbiRequests = False
;Ombi URI (Note that this has to be the instance of Ombi which manage the Arr instance request (If you have multiple Ombi instances)
OmbiURI = http://localhost:5000
;Ombi's API Key
OmbiAPIKey = ...
;Search Overseerr First (Will only work if 'SearchMissing' is enabled. (If this and Ombi are both enable, Ombi will be ignored)
SearchOverseerrRequests = True
;Overseerr's URI
OverseerrURI = http://localhost:5055
;Overseerr's API Key
OverseerrAPIKey = ...
;Only process approved requests
ApprovedOnly = False
;Ombi search timer (in seconds)
SearchRequestsEvery = 1800
; Search movies which already have a file in the db
DoUpgradeSearch = False
;Do a Quality unmet search for existing movies
QualityUnmetSearch = False
;Ignore slow torrents
DoNotRemoveSlow = False

[Radarr-4K]
; Toggle whether to manage Radarr torrents.
Managed = True
; The URL used to access Radarr's interface (if you use a domain enter the domain without a port)
URI = ...
; Radarr API Key, Can be found it Settings > General > Security
APIKey = ...
; Category applied by Radarr to torrents in qBitTorrent, can be found in Settings > Download Clients > qBit > Category
Category = radarr-4k
; Toggle whether to send a query to Radarr to search any deleted torrents
Research = True
; Radarr's Import Mode: (Move, Copy, Hardlink)
importMode = Move
; Timer to call RSSSync (In minutes) - Set to 0 to disable
RssSyncTimer = 10
; Timer to call RefreshDownloads tp update the queue. (In minutes) - Set to 0 to disable
RefreshDownloadsTimer = 1
; Set it to regex matches respect/ignore case.
CaseSensitiveMatches = False
; These regex values will match any folder where the full name matches the specified values here, comma separated strings.
FolderExclusionRegex : \bextras?\b,\bfeaturettes?\b,\bsamples?\b,\bscreens?\b,\bspecials?\b,\bova\b,\bnc(ed|op)?(\d+)?\b
; These regex values will match if any of these strings exist in the file names, comma separated strings.
FileNameExclusionRegex : \bncop\d+?\b,\bnced\d+?\b,\bsample\b,\brarbg.com\b,\btrailer\b,music video,comandotorrents.com
;Only files with these extensions will be allowed to be downloaded, comma separated strings.
FileExtensionAllowlist : .mp4,.mkv,.sub,.ass,.srt,.!qB,.parts
; Auto delete files that can't be playable (i.e .exe, .png)
AutoDelete = True
; Ignore Torrents which are younger than this value (in seconds: 600 = 10 Minutes)
IgnoreTorrentsYoungerThan = 180
; Maximum allowed remaining ETA for torrent completion (in seconds: 3600 = 1 Hour)
MaximumETA = 36000
; Do not delete torrents with higher completion percentge than this setting (0.5 = 50%, 1.0 = 100%)
MaximumDeletablePercentage = 0.99
;Should search for Missing files?
SearchMissing = False
;Search for specials? Only works if "SearchMissing" is enabled
AlsoSearchSpecials = True
;Maximum allowed Searches at any one points (I wouldn't reccomend settings this too high, Arrs have a limit of 3 tasks at once anyways.)
SearchLimit = 5
;Arr Databapth  file path
DatabaseFile = .../radarr.db
;Search Parameters
;It will order searches by the year the EPISODE was first aired (Ignored for now, as I add more options it will be made available)
SearchByYear = True
; First year to search (Leave blank for current year)
StartYear = 2021
; Last Year to Search
LastYear = 1990
;Reverse order (Start searching in "LastYear" and finish in "StartYear"
SearchInReverse = False
;Search Ombi First (Will only work if 'SearchMissing' is enabled.
SearchOmbiRequests = False
;Ombi URI (Note that this has to be the instance of Ombi which manage the Arr instance request (If you have multiple Ombi instances)
OmbiURI = http://localhost:5000
;Ombi's API Key
OmbiAPIKey = ...
;Search Overseerr First (Will only work if 'SearchMissing' is enabled. (If this and Ombi are both enable, Ombi will be ignored)
SearchOverseerrRequests = True
;Overseerr's URI
OverseerrURI = http://localhost:5055
;Overseerr's API Key
OverseerrAPIKey = ...
;Only process approved requests
ApprovedOnly = False
;Ombi search timer (in seconds)
SearchRequestsEvery = 1800
; Search movies which already have a file in the db
DoUpgradeSearch = False
;Do a Quality unmet search for existing movies
QualityUnmetSearch = False
;Ignore slow torrents
DoNotRemoveSlow = False

[QBit]
; Qbit WebUI Port - Can be found in Options > Web UI (called "IP Address")
Host = localhost
; Qbit WebUI Port - Can be found in Options > Web UI (called "Port" on top right corner of the window)
Port = 8105
; Qbit WebUI Authentication - Can be found in Options > Web UI > Authentication
UserName = ...
; If you set "Bypass authentication on localhost or whitelisted IPs" keep the password field empty.
Password = ...

[Settings]
; Level of logging; One of CRITICAL, ERROR, WARNING, NOTICE, INFO, DEBUG, TRACE
ConsoleLevel = INFO
; URL to be pinged to check if you have a valid internet connection.
PingURLS = one.one.one.one
; Folder where your completed downloads are put into
; Can be found in qBitTorrent -> Options -> Downloads -> Default Save Path
CompletedDownloadFolder = ...
;How many seconds to sleep for if there is no internet:
NoInternetSleepTimer = 15
; How many seconds to sleep between reprocessing torrents:
LoopSleepTimer = 5
;Add torrents to this category to mark them as failed:
FailedCategory = failed
;Add torrents to this category to trigger them to be rechecked properly:
RecheckCategory = recheck
; Ignore Torrents which are younger than this value (in seconds: 600 = 10 Minutes) (This only applied to torrents marked with "RecheckCategory" above
IgnoreTorrentsYoungerThan = 180
